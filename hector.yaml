# Hector - AI Agent Framework
# Default Configuration
#
# This is the default configuration loaded when you run `hector` without arguments.
# - Uses Chain-of-Thought strategy with built-in production-ready prompts
# - Safe Mode (Tier 1): Read-only commands + task management only
# - Customize via 'prompt_slots' or use 'system_prompt' for complete override
# - For specialized configs, see configs/ directory

agents:
  assistant:
    name: "AI Assistant"
    description: "General-purpose AI assistant for various tasks"
    
    llm: "main-llm"
    
    prompt:
      # Using strategy's default prompt slots (empty = use built-in defaults)
      # Uncomment and customize any slot below to override:
      #
      # prompt_slots:
      #   system_role: "You are a specialized assistant for..."
      #   tool_usage: "Custom tool usage instructions..."
      #   additional: "Domain-specific guidelines..."
      
      include_tools: true
      include_context: false
      include_history: true
      max_history_messages: 15
    
    reasoning:
      engine: "chain-of-thought"
      max_iterations: 10
      show_debug_info: false
      enable_streaming: true

# LLM Configuration
# Switch between providers by changing 'type' and setting appropriate API key
llms:
  main-llm:
    type: "openai"           # Options: "openai", "anthropic"
    model: "gpt-4o"          # OpenAI: gpt-4o, gpt-4-turbo | Anthropic: claude-3-7-sonnet-latest
    api_key: "${OPENAI_API_KEY}"  # Or ${ANTHROPIC_API_KEY} for Anthropic
    temperature: 0.7         # 0.0-1.0: lower = more focused, higher = more creative
    max_tokens: 8000
    timeout: 60

# Tools - Safe Mode (Tier 1) - Clean, flat structure!
# Default includes only read-only commands and task management
# For file editing (file_writer, search_replace), see configs/coding.yaml
tools:
  execute_command:
    type: command
    allowed_commands: ["ls", "cat", "head", "tail", "pwd", "find", "grep", "wc", "date", "echo", "tree", "du", "df"]
    working_directory: "./"
    max_execution_time: "30s"
    enable_sandboxing: true
  
  todo_write:
    type: todo
    description: "Manage task lists for complex workflows"

# Optional: Document Store for Semantic Search (uncomment to enable)
# Requires: Qdrant database and Ollama embedder running locally
# databases:
#   qdrant:
#     type: "qdrant"
#     host: "localhost"
#     port: 6334
#     collection_name: "docs"
#
# embedders:
#   embedder:
#     type: "ollama"
#     model: "nomic-embed-text"
#     host: "http://localhost:11434"
#
# document_stores:
#   workspace:
#     name: "workspace"
#     path: "."
#     source: "directory"
#     include_patterns: ["*.md", "*.txt", "*.pdf"]
#     exclude_patterns: [".git/**", "node_modules/**"]
#     database: "qdrant"
#     embedder: "embedder"
