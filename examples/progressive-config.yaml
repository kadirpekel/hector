# Progressive Config Example
# Shows how to gradually enhance configuration as needed

name: "my-assistant"
description: "Progressive configuration example"

# Step 1: Override LLM
llms:
  gpt4:
    type: "openai"
    model: "gpt-4o"
    api_key: "${OPENAI_API_KEY}"

# Step 2: Override database for production
databases:
  production-db:
    type: "qdrant"
    host: "qdrant.example.com"
    port: 6333
    api_key: "${QDRANT_API_KEY}"

# Step 3: Customize agent behavior
agents:
  my-agent:
    llm: "gpt4"
    database: "production-db"
    prompt:
      system_prompt: "You are a specialized coding assistant. Focus on providing accurate, well-documented code examples."
    reasoning:
      engine: "chain-of-thought"
      max_iterations: 5
      enable_self_reflection: true
    # Everything else uses defaults

# Step 4: Add custom tools (optional)
tools:
  default_repo: "local"
  repositories:
    - name: "local"
      type: "local"
      description: "Custom tools"
      tools:
        - name: "custom_tool"
          type: "command"
          enabled: true
          config:
            command_config:
              allowed_commands: ["docker", "kubectl", "terraform"]
              working_directory: "./"
              max_execution_time: "60s"
