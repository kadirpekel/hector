syntax = "proto3";

package hector.plugin;

option go_package = "github.com/kadirpekel/hector/plugins/grpc/proto";

import "common.proto";

// Database Provider Plugin Service
service DatabaseProvider {
  // Initialize the plugin with configuration
  rpc Initialize(InitializeRequest) returns (InitializeResponse);
  
  // Shutdown the plugin
  rpc Shutdown(ShutdownRequest) returns (ShutdownResponse);
  
  // Check plugin health
  rpc Health(HealthRequest) returns (HealthResponse);
  
  // Get plugin manifest
  rpc GetManifest(ManifestRequest) returns (ManifestResponse);
  
  // Get plugin status
  rpc GetStatus(StatusRequest) returns (StatusResponse);
  
  // Upsert a document
  rpc Upsert(UpsertRequest) returns (UpsertResponse);
  
  // Search for similar vectors
  rpc Search(SearchRequest) returns (SearchResponse);
  
  // Delete a document
  rpc Delete(DeleteRequest) returns (DeleteResponse);
  
  // Create a collection
  rpc CreateCollection(CreateCollectionRequest) returns (CreateCollectionResponse);
  
  // Delete a collection
  rpc DeleteCollection(DeleteCollectionRequest) returns (DeleteCollectionResponse);
}

// UpsertRequest adds or updates a document
message UpsertRequest {
  string collection = 1;
  string id = 2;
  repeated float vector = 3;
  map<string, string> metadata = 4;
}

// UpsertResponse confirms upsert
message UpsertResponse {
  bool success = 1;
  string error = 2;
}

// SearchRequest searches for similar vectors
message SearchRequest {
  string collection = 1;
  repeated float vector = 2;
  int32 top_k = 3;
}

// SearchResult represents a search result
message SearchResult {
  string id = 1;
  float score = 2;
  string content = 3;
  repeated float vector = 4;
  map<string, string> metadata = 5;
  string model_name = 6;
}

// SearchResponse returns search results
message SearchResponse {
  repeated SearchResult results = 1;
  string error = 2;
}

// DeleteRequest deletes a document
message DeleteRequest {
  string collection = 1;
  string id = 2;
}

// DeleteResponse confirms deletion
message DeleteResponse {
  bool success = 1;
  string error = 2;
}

// CreateCollectionRequest creates a new collection
message CreateCollectionRequest {
  string collection = 1;
  uint64 vector_size = 2;
}

// CreateCollectionResponse confirms collection creation
message CreateCollectionResponse {
  bool success = 1;
  string error = 2;
}

// DeleteCollectionRequest deletes a collection
message DeleteCollectionRequest {
  string collection = 1;
}

// DeleteCollectionResponse confirms collection deletion
message DeleteCollectionResponse {
  bool success = 1;
  string error = 2;
}

