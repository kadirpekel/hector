global:
  a2a_server:
    host: "0.0.0.0"
    port: 8080
llms:
  gpt-4o:
    type: "openai"
    model: "gpt-4o"
    api_key: "${OPENAI_API_KEY}"
    temperature: 0.7
    max_tokens: 4000
databases:
  qdrant-db:
    type: "qdrant"
    host: "localhost"
    port: 6333
embedders:
  ollama-embedder:
    type: "ollama"
    model: "nomic-embed-text"
    host: "http://localhost:11434"
tools:
  execute_command:
    type: "command"
    enabled: true
    max_execution_time: "30s"
  write_file:
    type: "write_file"
    enabled: true
    allowed_extensions: [".txt", ".md", ".yaml", ".json"]
    max_file_size: 10485760  
  search:
    type: "search"
    enabled: true
    document_stores: ["knowledge_base"]
  todo:
    type: "todo"
    enabled: true
  composio:
    type: "mcp"
    enabled: true
    server_url: "https://api.composio.dev/mcp"
    description: "Composio - Enterprise app integrations"
  mem0:
    type: "mcp"
    enabled: true
    server_url: "https://api.mem0.ai/mcp"
    description: "Mem0 - Persistent agent memory"
  custom_business_tools:
    type: "mcp"
    enabled: false  
    server_url: "http://localhost:3000/mcp"
    description: "Custom business logic and integrations"
document_stores:
  knowledge_base:
    path: "."
    source: "directory"
agents:
  file_assistant:
    name: "File Assistant"
    description: "Helps with file operations and searches"
    llm: "gpt-4o"
    database: "qdrant-db"
    embedder: "ollama-embedder"
    document_stores: ["knowledge_base"]
    prompt:
      system_prompt: |
        You are a helpful assistant that manages files and searches documentation.
      instructions: |
        Available tools:
        - execute_command: Run safe commands (cat, ls, grep, git)
        - write_file: Create or modify files
        - search: Search documentation
        - todo: Track tasks
  integration_agent:
    name: "Integration Agent"
    description: "Connects to external services via MCP"
    llm: "gpt-4o"
    prompt:
      system_prompt: |
        You are an integration specialist who can interact with
        external services like GitHub, Slack, and email.
      instructions: |
        Available integrations (via Composio):
        GitHub:
          - github_create_issue: Create issues
          - github_create_pr: Create pull requests
          - github_comment: Add comments
        Slack:
          - slack_send_message: Post messages
          - slack_create_channel: Create channels
        Email:
          - gmail_send_email: Send emails
          - gmail_search_emails: Search inbox
        Use these tools to automate workflows!
  personal_assistant:
    name: "Personal Assistant"
    description: "Remembers user preferences and context"
    llm: "gpt-4o"
    prompt:
      system_prompt: |
        You are a personal assistant who remembers user preferences,
        past conversations, and important facts.
      instructions: |
        Memory tools (via Mem0):
        - mem0_store: Save information
          Example: User prefers Python over JavaScript
        - mem0_recall: Retrieve memories
          Example: What programming language does user prefer?
        - mem0_search: Search all memories
          Example: Find all facts about user's projects
        Always store important preferences and recall them
        to provide personalized assistance!
  super_agent:
    name: "Super Agent"
    description: "Orchestrates tasks using all available tools"
    llm: "gpt-4o"
    database: "qdrant-db"
    embedder: "ollama-embedder"
    document_stores: ["knowledge_base"]
    reasoning:
      engine: "supervisor"
      max_iterations: 20
    prompt:
      system_prompt: |
        You are a powerful orchestrator with access to:
        - File operations (local system)
        - Documentation search (knowledge base)
        - External integrations (GitHub, Slack, Email)
        - Memory system (Mem0)
        You coordinate complex workflows by:
        1. Breaking down tasks
        2. Using appropriate tools
        3. Integrating results
      instructions: |
        Tool selection strategy:
        For file operations:
          → Use built-in tools (execute_command, write_file)
        For external services:
          → Use Composio tools (GitHub, Slack, Email)
        For user context:
          → Use Mem0 tools (store, recall, search)
        For information lookup:
          → Use search tool (documentation)
        Always choose the most appropriate tool for each task!
