llms:
  claude:
    type: "anthropic"
    model: "claude-sonnet-4-20250514"
    api_key: "${ANTHROPIC_API_KEY}"
    temperature: 0.0
    max_tokens: 8000
agents:
  coder:
    name: "AI Coding Assistant"
    description: "Expert AI assistant specialized in software development, code generation, and technical problem-solving"
    llm: "claude"
    docs_folder: "."         
    enable_tools: true       
    a2a:
      version: "1.0.0"
      input_modes:
        - "text/plain"
        - "application/json"
        - "text/x-python"
        - "text/x-go"
        - "text/x-javascript"
        - "text/x-typescript"
        - "text/markdown"
      output_modes:
        - "text/plain"
        - "application/json"
        - "text/x-python"
        - "text/x-go"
        - "text/x-javascript"
        - "text/x-typescript"
        - "text/markdown"
      skills:
        - id: "code-generation"
          name: "Code Generation"
          description: "Generate production-ready code in multiple languages including Python, Go, JavaScript, and TypeScript"
          tags: ["coding", "generation", "development"]
          examples:
            - "Create a REST API in Go"
            - "Write unit tests for this function"
            - "Implement a binary search algorithm"
        - id: "code-review"
          name: "Code Review & Analysis"
          description: "Review code for bugs, performance issues, security vulnerabilities, and best practices"
          tags: ["review", "analysis", "quality"]
          examples:
            - "Review this code for security issues"
            - "Optimize this function for performance"
            - "Suggest improvements for this class"
        - id: "semantic-search"
          name: "Codebase Search"
          description: "Search and understand large codebases using semantic search and RAG"
          tags: ["search", "understanding", "rag"]
          examples:
            - "Find where authentication is handled"
            - "Show me database connection code"
            - "Locate error handling patterns"
        - id: "refactoring"
          name: "Code Refactoring"
          description: "Refactor and improve existing code while maintaining functionality"
          tags: ["refactoring", "improvement", "maintenance"]
          examples:
            - "Refactor this code to use design patterns"
            - "Extract this logic into a reusable function"
            - "Simplify this complex function"
    prompt:
      system_prompt: |
        You are an expert AI coding assistant.
        You operate like a pair programmer in Cursor.
        Your capabilities:
        - Semantic code search to understand codebases
        - File creation and modification
        - Command execution for testing and validation
        - Step-by-step reasoning
      instructions: |
        Always implement changes rather than just suggesting them.
        Use semantic search to understand patterns before making changes.
    reasoning:
      engine: "chain-of-thought"
      max_iterations: 100
      enable_self_reflection: true       
      enable_structured_reflection: true 
      enable_streaming: true
      show_tool_execution: true
      show_thinking: true                
    memory:
      strategy: "summary_buffer"
      budget: 4000

# Embedders configuration
embedders:
  mxbai-embed-large:
    type: ollama
    model: mxbai-embed-large
    host: "http://localhost:11434"

# Vector database configuration
databases:
  qdrant_local:
    type: qdrant
    host: "localhost"
    port: 6333

# Document store configuration for RAG/semantic search
document_stores:
  docs_hector:
    path: .

    # Progress tracking defaults (all are optional, shown here for reference)
    # quiet_mode: true             # Default: true - suppress per-file warnings
    # show_progress: true          # Default: true - show progress bar
    # verbose_progress: false      # Default: false - show current file being indexed
    # enable_checkpoints: true     # Default: true - enable resume on interruption

    # Performance
    max_concurrent_files: 10
    max_file_size: 5242880        # 5MB

    # Chunking
    chunk_size: 800
    chunk_strategy: simple

    # Metadata extraction
    extract_metadata: true
    metadata_languages:
      - go
